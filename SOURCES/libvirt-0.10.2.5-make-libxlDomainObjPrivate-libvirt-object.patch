diff -ru a/src/libxl/libxl_conf.h b/src/libxl/libxl_conf.h
--- a/src/libxl/libxl_conf.h	2013-06-12 08:49:15.304970980 +0100
+++ b/src/libxl/libxl_conf.h	2013-06-12 08:52:56.529750461 +0100
@@ -79,6 +79,7 @@
 typedef struct _libxlDomainObjPrivate libxlDomainObjPrivate;
 typedef libxlDomainObjPrivate *libxlDomainObjPrivatePtr;
 struct _libxlDomainObjPrivate {
+    virObject parent;
     virMutex lock;
 
     /* per domain libxl ctx */
diff -ru a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
--- a/src/libxl/libxl_driver.c	2013-06-12 08:49:15.308971067 +0100
+++ b/src/libxl/libxl_driver.c	2013-06-12 09:28:05.344885653 +0100
@@ -98,6 +98,8 @@
     int id;
 };
 
+static virClassPtr libxlDomainObjPrivateClass;
+
 #define virObjectLock(p)   virMutexLock(&(p)->lock)
 #define virObjectUnlock(p) virMutexUnlock(&(p)->lock)
 
@@ -113,7 +115,22 @@
 libxlVmStart(libxlDriverPrivatePtr driver, virDomainObjPtr vm,
              bool start_paused, int restore_fd);
 
+static void libxlDomainObjPrivateDispose(void *obj);
+
 /* Function definitions */
+static int
+libxlDomainObjPrivateOnceInit(void)
+{
+    if (!(libxlDomainObjPrivateClass = virClassNew("libxlDomainObjPrivate",
+                                                   sizeof(libxlDomainObjPrivate),
+                                                   libxlDomainObjPrivateDispose)))
+        return -1;
+
+    return 0;
+}
+
+VIR_ONCE_GLOBAL_INIT(libxlDomainObjPrivate)
+
 static void
 libxlDriverLock(libxlDriverPrivatePtr driver)
 {
@@ -382,7 +399,10 @@
 {
     libxlDomainObjPrivatePtr priv;
 
-    if (VIR_ALLOC(priv) < 0)
+    if (libxlDomainObjPrivateInitialize() < 0)
+        return NULL;
+
+    if (!(priv = virObjectNew(libxlDomainObjPrivateClass)))
         return NULL;
 
     if (virMutexInit(&priv->lock) < 0) {
@@ -392,8 +412,7 @@
 
     if (libxl_ctx_alloc(&priv->ctx, LIBXL_VERSION, 0, libxl_driver->logger)) {
         VIR_ERROR(_("Failed libxl context initialization"));
-        virMutexDestroy(&priv->lock);
-        VIR_FREE(priv);
+        virObjectUnref(priv);
         return NULL;
     }
     priv->deathW = NULL;
@@ -403,18 +422,28 @@
 }
 
 static void
+libxlDomainObjPrivateDispose(void *obj)
+{
+    libxlDomainObjPrivatePtr priv = obj;
+
+    if (priv->deathW)
+        libxl_evdisable_domain_death(priv->ctx, priv->deathW);
+
+    libxl_ctx_free(priv->ctx);
+    virMutexDestroy(&priv->lock);
+}
+
+static void
 libxlDomainObjPrivateFree(void *data)
 {
     libxlDomainObjPrivatePtr priv = data;
 
     if (priv->deathW) {
         libxl_evdisable_domain_death(priv->ctx, priv->deathW);
-        VIR_FREE(priv->deathW);
+        priv->deathW = NULL;
     }
 
-    libxl_ctx_free(priv->ctx);
-    virMutexDestroy(&priv->lock);
-    VIR_FREE(priv);
+    virObjectUnref(priv);
 }
 
 
@@ -742,9 +771,10 @@
     return 0;
 
 error:
-    if (priv->deathW)
+    if (priv->deathW) {
         libxl_evdisable_domain_death(priv->ctx, priv->deathW);
-    VIR_FREE(priv->deathW);
+        priv->deathW = NULL;
+    }
     return -1;
 }

